<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.appspot.czarlotka</groupId>
    <artifactId>czarlotka</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>Czarlotka</name>
    <description>Serwis Czarlotka</description>

    <repositories>
        <repository>
            <id>google-maven-repo</id>
            <name>Google Maven Repository</name>
            <url>http://google-maven-repository.googlecode.com/svn/repository/</url>
        </repository>
        <repository>
            <id>gwt-maven</id>
            <url>http://gwt-maven.googlecode.com/svn/trunk/mavenrepo/</url>
        </repository>
        <repository>
            <id>guice-maven</id>
            <name>guice maven</name>
            <url>http://guice-maven.googlecode.com/svn/trunk</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>maven-gae-plugin-repo</id>
            <name>Maven Google App Engine Repository</name>
            <url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
        </pluginRepository>
        <pluginRepository>
            <id>cukes</id>
            <url>http://cukes.info/maven</url>
        </pluginRepository>
        <pluginRepository>
            <id>gwt-maven-plugins</id>
            <url>http://gwt-maven.googlecode.com/svn/trunk/mavenrepo/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>pl.zmudzinski.lukasz</groupId>
            <artifactId>orm-commons</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
           <dependency>
            <groupId>pl.zmudzinski.lukasz</groupId>
            <artifactId>guice-commons</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.guice</groupId>
            <artifactId>guice-servlet</artifactId>
            <version>2.0</version>
        </dependency>

        <!-- jars from GAE's "lib/user" must be added as compile-time dependencies, as described
  here in "Copying JARs" section: http://code.google.com/appengine/docs/java/tools/ant.html -->
        <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-eb</version>
            <exclusions>
                <!-- exclude the legacy javax.transaction:transaction-api and replace it with javax.transaction:jta
         (it appears to be the same thing) -->
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.appengine.orm</groupId>
            <artifactId>datanucleus-appengine</artifactId>
            <version>1.0.7.final</version>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-tools-api</artifactId>
            <version>1.3.5</version>
        </dependency>

        <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>1.1.5</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>datanucleus-jpa</artifactId>
            <version>1.1.5</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>geronimo-jpa_3.0_spec</artifactId>
            <version>1.1.1</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>

        <!-- GWT dependencies -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwt.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- J2EE Servlet API. We need it to compile IndexServlet class. You can probably remove
 it, if you don't explicitly use Servlets -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.5_spec</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- Make use of JSP tags. Remove, if you don't use JSPs -->
        <dependency>
            <artifactId>standard</artifactId>
            <groupId>taglibs</groupId>
            <version>1.1.2</version>
            <type>jar</type>
            <scope>runtime</scope>
        </dependency>

        <!-- These dependencies are here just for enabling logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.0</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>0.9.22</version>
        </dependency>

        <!-- Test scope -->
        <dependency>
            <groupId>cuke4duke</groupId>
            <artifactId>cuke4duke</artifactId>
            <version>0.3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>

        <!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.0.2</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>cuke4duke</groupId>
                <artifactId>cuke4duke-maven-plugin</artifactId>
                <configuration>
                    <jvmArgs>
                        <!-- Debugging. See http://wiki.github.com/aslakhellesoy/cuke4duke/debug-cuke4duke-steps -->
                        <jvmArg>-Xmx384m</jvmArg>
                        <jvmArg>-Dlog4j.configuration=file:///${project.basedir}/target/test-classes/log4j.properties
                        </jvmArg>
                        <jvmArg>-Dcuke4duke.objectFactory=cuke4duke.internal.jvmclass.GuiceFactory</jvmArg>
                        <jvmArg>
                            -Dcuke4duke.guiceModule=com.appspot.czarlotka.server.notification.NotificationModule
                        </jvmArg>
                        <jvmArg>-Dfile.encoding=UTF-8</jvmArg>
                    </jvmArgs>
                    <cucumberArgs>
                        <cucumberArg>--color</cucumberArg>
                        <cucumberArg>--verbose</cucumberArg>
                        <cucumberArg>--strict</cucumberArg>
                        <cucumberArg>--require</cucumberArg>
                        <cucumberArg>${basedir}/target/test-classes</cucumberArg>
                    </cucumberArgs>
                    <gems>
                        <gem>install cuke4duke --version 0.3.1</gem>
                    </gems>
                </configuration>
                <executions>
                    <execution>
                        <id>run-features</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>cucumber</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- This plug-in "enhances" your domain api objects (i.e. makes them persistent for
           datanucleus) -->
            <plugin>
                <groupId>org.datanucleus</groupId>
                <artifactId>maven-datanucleus-plugin</artifactId>
                <version>1.1.4</version>
                <configuration>
                    <!-- Make sure this path contains your persistent classes! -->
                    <mappingIncludes>**/api/*.class</mappingIncludes>
                    <verbose>true</verbose>
                    <enhancerName>ASM</enhancerName>
                    <api>JDO</api>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-core</artifactId>
                        <version>1.1.5</version>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.transaction</groupId>
                                <artifactId>transaction-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-rdbms</artifactId>
                        <version>1.1.5</version>
                    </dependency>
                    <dependency>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-enhancer</artifactId>
                        <version>1.1.4</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-beta-1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/appengine-web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <!-- Maven GWT plugin (ex. http://gwt-maven.googlecode.com/svn/docs/maven-googlewebtoolkit2-plugin/index.html)
           http://mojo.codehaus.org/gwt-maven-plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>1.2</version>
                <configuration>
                    <logLevel>INFO</logLevel>

                    <!-- match -Dgae.port -->
                    <port>${gae.port}</port>

                    <!-- This must point to your GWT modules! -->
                    <!--
                    <compileTargets>
                        <value>com.appspot.czarlotka.Messages</value>
                        <value>com.appspot.czarlotka.CzarlotkaModel</value>
                    </compileTargets>
-->
                    <!-- This is for generating Asynch interfaces -->
                    <!-- <servicePattern>**/client/*Service.java</servicePattern> -->

                    <extraJvmArgs>-Xmx512m</extraJvmArgs>
                    <!--<jvm>${JAVA_HOME}/bin/java</jvm> -->
                    <!--<noServer>false</noServer> -->

                    <!-- TODO This should help running GAE stuff in hosted mode (when gwt-maven-plugin-1.2
                is released, see http://jira.codehaus.org/browse/MGWT-112) -->
                    <server>com.google.appengine.tools.development.gwt.AppEngineLauncher
                    </server>

                    <runTarget>/index.html</runTarget>
                    <style>DETAILED</style>
                    <webXml>war/WEB-INF/web.xml</webXml>
                    <!-- this parameter is VERY important with automatic mode - has to match the version
                in your declared deps -->
                    <!-- if this is set incorrect (not a match), or left out (default is 1.5.2 for 2.0-beta23)
               you will have mysterious errors -->
                    <gwtVersion>${gwt.version}</gwtVersion>
                </configuration>
                <executions>
                    <!-- <execution> <id>generateAsynch</id> <phase>generate-sources</phase> <goals>
                 <goal>generateAsync</goal> </goals> </execution> -->
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- The actual maven-appspot-plugin. Type "mvn appspot:run" to run project, "mvn appspot:deploy"
        to upload to GAE. -->
            <plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
                <version>0.5.9</version>
            </plugin>

            <!-- Upload application to the appspot automatically, during release:perform -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>gae:deploy</goals>
                </configuration>
            </plugin>

            <!-- Java compiler version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Specify hard-coded project properties here -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.sourceEncoding>UTF-8</project.reporting.sourceEncoding>

        <!-- This is just for "eclipse:eclipse" goal to always attempt downloading sources -->
        <downloadSources>true</downloadSources>

        <!-- Specify AppEngine version for your project. It should match SDK version pointed to
by ${appspot.home} property (Typically, one used by your Eclipse plug-in) -->
        <gae.version>1.3.5</gae.version>

        <!-- GWT version -->
        <gwt.version>2.0.4</gwt.version>

        <!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
        <gae.application.version>test</gae.application.version>

        <!-- port defaults to 8080 -->
        <gae.port>8080</gae.port>

        <gae.home>/opt/appengine-java-sdk-1.3.5</gae.home>

        <!-- Produce detailed JS during GWT compilation for development environment -->
        <gwt.style>DETAILED</gwt.style>
    </properties>

    <profiles>

        <!-- We can configure our integration server to activate this profile and perform appspot:deploy,
thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com automatically -->
        <profile>
            <id>integration-build</id>
            <properties>
                <gae.application.version>stage</gae.application.version>

                <!-- Produce pretty JS during GWT compilation for test environment -->
                <gwt.style>PRETTY</gwt.style>
            </properties>
        </profile>

        <!-- This profile will activate automatically during release and upload application to
the http://2.latest.<applicationName>.appspot.com (We might want to set the 2nd version as
our applications Default version to be accessible at http://<applicationName>.appspot.com) -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>

            <properties>
                <!-- During release, set application version in appengine-web.xml to 2 -->
                <gae.application.version>release</gae.application.version>

                <!-- Produce compressed JS during GWT compilation for production environment -->
                <gwt.style>OBFUSCATED</gwt.style>
            </properties>
        </profile>
    </profiles>

</project>
